{"version":3,"sources":["webpack:///./src/app/components/coming-soon/coming-soon.component.html","webpack:///./src/app/components/password-match-input/password-match-input.component.html","webpack:///./src/app/components/coming-soon/coming-soon.component.scss","webpack:///./src/app/components/coming-soon/coming-soon.component.ts","webpack:///./src/app/components/coming-soon/coming-soon.module.ts","webpack:///./src/app/components/modals/confirmation-dialog/confirmation-dialog.module.ts","webpack:///./src/app/components/password-match-input/password-match-input.component.scss","webpack:///./src/app/components/password-match-input/password-match-input.component.ts","webpack:///./src/app/components/password-match-input/password-match-input.module.ts"],"names":[],"mappings":"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","file":"default~pages-student-student-module~pages-teacher-teacher-module.699a34211a111dddc10b.js","sourcesContent":["module.exports = \"<section class=\\\"wrapper\\\">\\n    <h1 class=\\\"title-display-1\\\">Coming soon</h1>\\n</section>\"","module.exports = \"<div class=\\\"\\\" [formGroup]=\\\"form\\\">\\n    <ng-container *ngIf=\\\"form.get('password'); let password\\\">\\n        <app-ji-input \\n            [parentForm]=\\\"form\\\" \\n            [type]=\\\"'password'\\\"\\n            [input]=\\\"'password'\\\" \\n            [title]=\\\"'New password'\\\"\\n            [placeholder]=\\\"'Add your new password'\\\" \\n            [errors]=\\\"password.errors\\\"\\n            [hasError]=\\\"password.invalid && (password.dirty || password.touched)\\\"></app-ji-input>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"form.get('confirmPassword'); let confirmPassword\\\">\\n        <app-ji-input \\n            [parentForm]=\\\"form\\\" \\n            [type]=\\\"'password'\\\"\\n            [input]=\\\"'confirmPassword'\\\" \\n            [title]=\\\"'Confirm new password'\\\"\\n            [placeholder]=\\\"'Re-enter your new password'\\\" \\n            [errors]=\\\"confirmPassword.errors\\\"\\n            [hasError]=\\\"confirmPassword.invalid \\n                && (\\n                    confirmPassword.dirty \\n                    || confirmPassword.touched\\n                )\\\"></app-ji-input>\\n    </ng-container>\\n</div>\"","module.exports = \"h1 {\\n  margin-top: 40px;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9raHJlYnRvdi9Qcm9qZWN0cy9qb3VybmV5aW50by1mcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvY29taW5nLXNvb24vY29taW5nLXNvb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZ0I7RUFDaEIsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NvbWluZy1zb29uL2NvbWluZy1zb29uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDEge1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { SpinnerOverlayService } from '../../services';\n\n@Component({\n    selector: 'app-coming-soon',\n    templateUrl: './coming-soon.component.html',\n    styleUrls: ['./coming-soon.component.scss']\n})\nexport class ComingSoonComponent {\n    constructor(\n        private spinner: SpinnerOverlayService\n    ) {\n        this.spinner.hide();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComingSoonComponent } from './coming-soon.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule\n    ],\n    providers: [],\n    bootstrap: [],\n    declarations: [ComingSoonComponent],\n    exports: [ComingSoonComponent]\n})\nexport class ComingSoonModule { }\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCommonModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRippleModule,\n} from '@angular/material';\n\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ConfirmationDialogComponent],\n  entryComponents: [ConfirmationDialogComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule,\n    MatCommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FlexLayoutModule,\n    MatRippleModule\n  ],\n})\nexport class ConfirmationDialogModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFzc3dvcmQtbWF0Y2gtaW5wdXQvcGFzc3dvcmQtbWF0Y2gtaW5wdXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, forwardRef, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl\n} from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\nimport { IAppState } from '@src/app/store/app.reducers';\nimport { filter } from 'rxjs/operators';\nimport { RequestStatus } from '@src/app/services/api.service.interface';\nimport { selectUserStatus } from '@src/app/store/modules/user/user.selectors';\nimport { Subscription } from 'rxjs';\n\n\nconst lower = /[a-z]/;\nconst upper = /[A-Z]/;\nconst numbers = /[0-9]/;\n\n\nconst CUSTOM_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PasswordMatchInputComponent),\n    multi: true,\n};\n\n@Component({\n    selector: 'app-password-match-input',\n    providers: [CUSTOM_VALUE_ACCESSOR],\n    templateUrl: './password-match-input.component.html',\n    styleUrls: ['./password-match-input.component.scss']\n})\nexport class PasswordMatchInputComponent implements ControlValueAccessor, OnInit, OnDestroy {\n    @Output() passwordFormValid = new EventEmitter<boolean>();\n    private level: string;\n    public disabled: boolean;\n    private onChange: Function;\n    private onTouched: Function;\n\n    public subscriptions: Subscription[] = [];\n    public status$ = this.store.pipe(\n        select(selectUserStatus),\n        filter(status => Boolean(status) && status === RequestStatus.success)\n    );\n\n    password = new FormControl('', [\n        // Validators.required,\n        Validators.minLength(8)\n        // control => this.passwordValidator(control)\n    ]);\n    confirmPassword = new FormControl('', [\n        // Validators.required,\n        control => this.matchValidator(control)\n    ]);\n\n    public form = new FormGroup({\n        password: this.password,\n        confirmPassword: this.confirmPassword\n    });\n\n    constructor(\n        private store: Store<IAppState>\n    ) {\n        this.onChange = (_: any) => { };\n        this.onTouched = () => { };\n        this.disabled = false;\n\n        this.form.valueChanges.subscribe(\n            _ => this.checkValue()\n        );\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.status$.subscribe(status => {\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    public isActive(value: string): boolean {\n        return value === this.level;\n    }\n\n\n    public checkValue() {\n        // if the passwords are valid, update the control value to match the password value (if form is valid both passwords must match)\n        if (this.form.valid) {\n            this.onChange(this.password.value);\n        } else {\n            this.onChange(null);\n        }\n\n        const isPasswordFormValid = Boolean(this.password.value\n            && this.confirmPassword.value\n            && this.form.valid);\n        this.passwordFormValid.emit(isPasswordFormValid);\n\n        this.onTouched();\n    }\n\n    writeValue(value: any): void {\n        this.form.setValue({\n            password: value,\n            confirmPassword: value\n        });\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    matchValidator(control: AbstractControl) {\n        if (control.value && this.password.value !== control.value) {\n            return { mismatch: true };\n        }\n    }\n\n    passwordValidator(control: AbstractControl) {\n        if (control.value) {\n            const password = control.value;\n\n            if (password.length < 8) {\n                return { length: true };\n            }\n        }\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PasswordMatchInputComponent } from './password-match-input.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JiFormsModule } from '../forms/ji-forms.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        JiFormsModule\n    ],\n    providers: [],\n    bootstrap: [],\n    declarations: [PasswordMatchInputComponent],\n    exports: [PasswordMatchInputComponent]\n})\nexport class PasswordMatchInputModule { }\n"],"sourceRoot":""}