{"version":3,"sources":["webpack:///./src/app/components/errors/errors.component.html","webpack:///./src/app/pages/login/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/pages/login/forgot-dialog-form/forgot-dialog-form.component.html","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/components/errors/errors.component.scss","webpack:///./src/app/components/errors/errors.component.ts","webpack:///./src/app/components/errors/errors.module.ts","webpack:///./src/app/pages/login/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/pages/login/confirm-dialog/confirm-dialog.module.ts","webpack:///./src/app/pages/login/forgot-dialog-form/forgot-dialog-form.component.scss","webpack:///./src/app/pages/login/forgot-dialog-form/forgot-dialog-form.component.ts","webpack:///./src/app/pages/login/forgot-dialog-form/forgot-dialog-form.module.ts","webpack:///./src/app/pages/login/login.component.scss","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/login/login.module.ts","webpack:///./src/app/store/modules/authentication/authentication.selectors.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.b5b96b9b3fee7bb51f38.js","sourcesContent":["module.exports = \"<p *ngIf=\\\"errors\\\" [innerHTML]=\\\"errors | safeHTML\\\" class=\\\"text-error\\\"></p>\"","module.exports = \"<mat-dialog-content>\\n  <div class=\\\"close-dialog-img pointer\\\">\\n    <img (click)=\\\"close()\\\" src=\\\"assets/img/close_modal.svg\\\" />\\n  </div>\\n  <div class=\\\"title-display-3 text-center m-b-6\\\">{{ title }}</div>\\n  <div class=\\\"text-display-3 text-center m-b-6\\\">{{ message }}</div>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"center\\\" class=\\\"confirm-buttons-container\\\">\\n  <div class=\\\"width-100 m-t-7\\\" fxLayout=\\\"row\\\">\\n    <button type=\\\"submit\\\" mat-ripple class=\\\"btn btn-large btn-rounded bg-20 width-100\\\" mat-dialog-close tabindex=\\\"-1\\\">\\n      {{ cancelButtonText }}\\n    </button>\\n  </div>\\n</mat-dialog-actions>\\n\"","module.exports = \"<mat-dialog-content>\\n    <div class=\\\"close-dialog-img pointer\\\">\\n        <img (click)=\\\"close()\\\" src=\\\"assets/img/close_modal.svg\\\" />\\n    </div>\\n    <div class=\\\"title-display-3 text-center m-b-6\\\">{{ title }}</div>\\n    <div class=\\\"text-display-3 text-center m-b-6\\\">{{ message }}</div>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\\"center\\\" class=\\\"confirm-buttons-container\\\">\\n    <p *ngIf=\\\"errors\\\" class=\\\"text-error m-t-24\\\">It looks like the email you entered is not valid, please try again.</p>\\n    <form [formGroup]=\\\"forgottenPasswordForm\\\" class=\\\"m-t-24\\\">\\n        <ng-container *ngIf=\\\"forgottenPasswordForm.get('email'); let email\\\">\\n            <app-ji-input\\n                [parentForm]=\\\"forgottenPasswordForm\\\"\\n                [input]=\\\"'email'\\\"\\n                [type]=\\\"'email'\\\"\\n                [title]=\\\"'Email'\\\"\\n                [errors]=\\\"email.errors\\\"\\n                [isValid]=\\\"email.valid && email.value\\\"\\n                [hasError]=\\\"email.invalid && formSubmitted\\\"></app-ji-input>\\n        </ng-container>\\n\\n        <div class=\\\"m-t-12\\\">\\n            <button\\n                mat-ripple\\n                type=\\\"submit\\\"\\n                class=\\\"btn btn-large btn-rounded bg-20 m-b-12 width-100\\\"\\n                (click)=\\\"handleSubmitClick()\\\"\\n                [disabled]=\\\"forgottenPasswordForm.invalid\\\">{{confirmButtonText}}</button>\\n        </div>\\n    </form>\\n</mat-dialog-actions>\"","module.exports = \"<div class=\\\"wrapper\\\">  \\n  <section class=\\\"text-center inner-logo\\\">\\n      <img src=\\\"/assets/img/logo.svg\\\">\\n\\n      <app-message [message]=\\\"message\\\"></app-message>\\n      <app-errors [errors]=\\\"errors\\\"></app-errors>\\n  </section>\\n\\n  <form [formGroup]=\\\"loginForm\\\" class=\\\"form-two\\\">\\n    <ng-container *ngIf=\\\"loginForm.get('email'); let email\\\">\\n      <app-ji-input\\n        [parentForm]=\\\"loginForm\\\"\\n        [input]=\\\"'email'\\\"\\n        [type]=\\\"'email'\\\"\\n        [title]=\\\"'Email'\\\"\\n        [errors]=\\\"email.errors\\\"\\n        [isValid]=\\\"email.valid && email.value\\\"\\n        [hasError]=\\\"email.invalid && loginFormSubmitted\\\"></app-ji-input>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"loginForm.get('password'); let password\\\">\\n      <app-ji-input\\n        [parentForm]=\\\"loginForm\\\"\\n        [input]=\\\"'password'\\\"\\n        [type]=\\\"'password'\\\"\\n        [title]=\\\"'Password'\\\"\\n        [errors]=\\\"password.errors\\\"\\n        [isValid]=\\\"password.valid && password.value\\\"\\n        [hasError]=\\\"password.invalid && loginFormSubmitted\\\"></app-ji-input>\\n    </ng-container>\\n    <section class=\\\"cta\\\">\\n      <button\\n        mat-ripple\\n        type=\\\"submit\\\"\\n        class=\\\"btn btn-large btn-rounded bg-20 width-100\\\"\\n        (click)=\\\"handleSubmitClick()\\\"\\n        [disabled]=\\\"status === requestStatus.pending\\\">Login</button>\\n      <button\\n        mat-ripple\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-large btn-rounded btn-bordered width-100\\\"\\n        [disabled]=\\\"status === requestStatus.pending\\\"\\n        (click)=\\\"goToSignup()\\\">Register</button>\\n      <a (click)=\\\"forgottenPassword()\\\" \\n        class=\\\"text-display-1 forgot-password-link\\\">Forgot password?</a>\\n      <a (click)=\\\"openTakethetourModal()\\\" class=\\\"text-display-1\\\">Take the tour</a>\\n    </section>\\n  </form>\\n</div>\\n\"","module.exports = \"p {\\n  margin-top: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9raHJlYnRvdi9Qcm9qZWN0cy9qb3VybmV5aW50by1mcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvZXJyb3JzL2Vycm9ycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9lcnJvcnMvZXJyb3JzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsicCB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbn0iXX0= */\"","import { OnInit, Input, Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-errors',\n    templateUrl: './errors.component.html',\n    styleUrls: ['./errors.component.scss']\n})\nexport class ErrorsComponent implements OnInit {\n    @Input() errors: '';\n\n    constructor() { }\n\n    ngOnInit() { }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorsComponent } from './errors.component';\nimport { PipesModule } from '@src/app/pipes/pipes.module';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PipesModule\n    ],\n    providers: [],\n    bootstrap: [],\n    declarations: [ErrorsComponent],\n    exports: [ErrorsComponent]\n})\nexport class ErrorsModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'confirmation-dialog',\n  templateUrl: 'confirm-dialog.component.html'\n})\nexport class ConfirmDialogComponent {\n\n  public message: string = '';\n  public confirmButtonText: string = '';\n  public cancelButtonText: string = '';\n  public title: string = '';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    private data: any,\n    private dialogRef: MatDialogRef<ConfirmDialogComponent>\n  ) {\n    if (data) {\n      this.message = data.message || this.message;\n      this.title = data.title || this.title;\n      if (data.buttonText) {\n        this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;\n        this.cancelButtonText = data.buttonText.cancel || this.cancelButtonText;\n      }\n    }\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatCommonModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRippleModule\n} from '@angular/material';\n\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\n\n@NgModule({\n  declarations: [ConfirmDialogComponent],\n  entryComponents: [ConfirmDialogComponent],\n  imports: [\n    MatButtonModule,\n    MatCommonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FlexLayoutModule,\n    MatRippleModule\n  ]\n})\nexport class ConfirmDialogModule {}\n","module.exports = \"form {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9raHJlYnRvdi9Qcm9qZWN0cy9qb3VybmV5aW50by1mcm9udGVuZC9zcmMvYXBwL3BhZ2VzL2xvZ2luL2ZvcmdvdC1kaWFsb2ctZm9ybS9mb3Jnb3QtZGlhbG9nLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9mb3Jnb3QtZGlhbG9nLWZvcm0vZm9yZ290LWRpYWxvZy1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  selectForgottenPasswordErrors,\n  selectForgottenPasswordStatus\n} from '@src/app/store/modules/forgotten-password/forgotten-password.selectors';\nimport { select, Store } from '@ngrx/store';\nimport { IAppState } from '@src/app/store/app.reducers';\nimport { RequestStatus } from '@src/app/services/api.service.interface';\nimport { ForgottenPasswordResetRequestAction } from '@src/app/store/modules/forgotten-password/forgotten-password.actions';\nimport { Observable, Subscription } from 'rxjs/index';\n\n@Component({\n  selector: 'app-forgot-dialog',\n  styleUrls: ['./forgot-dialog-form.component.scss'],\n  templateUrl: './forgot-dialog-form.component.html',\n})\nexport class ForgotDialogFormComponent implements OnInit, OnDestroy {\n  public title: string = '';\n  public message: string = '';\n  public confirmButtonText: string = '';\n  public forgottenPasswordForm: FormGroup;\n  public formSubmitted = false;\n  // Request statuses\n  public requestStatus = RequestStatus;\n\n  public subscriptions: Subscription[] = [];\n  public status$: Observable<string>;\n  public errors$: Observable<any>;\n  public status: null | string = null;\n  public errors: null | string = null;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    private data: any,\n    private dialogRef: MatDialogRef<ForgotDialogFormComponent>,\n    private fb: FormBuilder,\n    private store: Store<IAppState>\n  ) {\n    if (data) {\n      this.title = data.title || this.message;\n      this.message = data.message || this.message;\n      if (data.buttonText) {\n        this.confirmButtonText = data.buttonText.ok || this.confirmButtonText;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    // Forgotten password form inputs\n    this.forgottenPasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.status$ = this.store.pipe(select(selectForgottenPasswordStatus));\n    this.errors$ = this.store.pipe(select(selectForgottenPasswordErrors));\n\n    // Forgotten password form inputs\n    this.forgottenPasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n\n    this.subscriptions.push(\n      this.status$.subscribe(status => {\n        if (status && status === this.requestStatus.success) {\n          this.dialogRef.close(true);\n        }\n        this.status = status;\n      }),\n      this.errors$.subscribe(errors => {\n        this.errors = errors;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  handleSubmitClick(): void {\n    this.formSubmitted = true;\n    // Send request to backend\n    this.store.dispatch(\n      new ForgottenPasswordResetRequestAction({\n        email: this.forgottenPasswordForm.get('email').value\n      })\n    );\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCommonModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatRippleModule,\n} from '@angular/material';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CommonModule } from '@angular/common';\nimport { ForgotDialogFormComponent } from './forgot-dialog-form.component';\nimport { JiFormsModule } from '@src/app/components/forms/ji-forms.module';\n\n@NgModule({\n  declarations: [ForgotDialogFormComponent],\n  entryComponents: [ForgotDialogFormComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCommonModule,\n    MatDialogModule,\n\n    MatFormFieldModule,\n    MatInputModule,\n    FlexLayoutModule,\n    MatRippleModule,\n    JiFormsModule\n  ],\n})\nexport class ForgotDialogFormModule {}\n","module.exports = \".wrapper {\\n  padding-top: 30px; }\\n\\n.inner-logo img {\\n  width: 110px;\\n  height: auto;\\n  margin-bottom: 60px; }\\n\\n.cta {\\n  margin: 25px 0; }\\n\\n.cta button {\\n    margin-bottom: 20px; }\\n\\n.cta a {\\n    display: block;\\n    text-align: center;\\n    cursor: pointer; }\\n\\n.cta .forgot-password-link {\\n    margin-top: 40px;\\n    margin-bottom: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9raHJlYnRvdi9Qcm9qZWN0cy9qb3VybmV5aW50by1mcm9udGVuZC9zcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCLEVBQUE7O0FBR25CO0VBRUksWUFBWTtFQUNaLFlBQVk7RUFDWixtQkFBbUIsRUFBQTs7QUFJdkI7RUFDRSxjQUFjLEVBQUE7O0FBRGhCO0lBSUksbUJBQW1CLEVBQUE7O0FBSnZCO0lBUUksY0FBYztJQUNkLGtCQUFrQjtJQUNsQixlQUFlLEVBQUE7O0FBVm5CO0lBY0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud3JhcHBlciB7XG4gIHBhZGRpbmctdG9wOiAzMHB4O1xufVxuXG4uaW5uZXItbG9nbyB7XG4gIGltZyB7XG4gICAgd2lkdGg6IDExMHB4O1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICB9XG59XG5cbi5jdGEge1xuICBtYXJnaW46IDI1cHggMDtcblxuICBidXR0b24ge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cblxuICBhIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbiAgLmZvcmdvdC1wYXNzd29yZC1saW5rIHtcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthenticationBasicRequestAction } from '@src/app/store/modules/authentication/authentication.actions';\nimport {\n  selectAuthenticationErrors,\n  selectAuthenticationStatus\n} from '@src/app/store/modules/authentication/authentication.selectors';\nimport { IAppState } from '@src/app/store/app.reducers';\nimport { RequestStatus } from '@src/app/services/api.service.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ForgotDialogFormComponent } from './forgot-dialog-form/forgot-dialog-form.component';\nimport { ConfirmDialogComponent } from '@src/app/pages/login/confirm-dialog/confirm-dialog.component';\nimport { TakethetourDialogComponent } from '@src/app/components/modals/takethetour-dialog/takethetour-dialog.component';\nimport { selectForgottenPasswordMessage } from '@src/app/store/modules/forgotten-password/forgotten-password.selectors';\nimport { selectUserActive } from '@src/app/store/modules/user/user.selectors';\nimport { ViewStatuses } from '@src/app/store/modules/user/user.types';\nimport { selectCancelUrl } from '@src/app/store/modules/shared/shared.selectors';\nimport { combineLatest } from 'rxjs/index';\nimport { openTourModal } from '@src/app/components/modals/takethetour-dialog/modal-utils';\n\nimport { RouteNames } from '../../route-names';\nimport { filter } from 'rxjs/operators';\nimport { SpinnerOverlayService } from '@src/app/services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  routeNames: typeof RouteNames = RouteNames;\n\n  // Store\n  public subscriptions: Subscription[] = [];\n  public status$: Observable<string> = this.store.pipe(select(selectAuthenticationStatus));\n  public errors$: Observable<any> = this.store.pipe(\n    select(selectAuthenticationErrors),\n    filter(Boolean)\n  );\n  public loginData$: Observable<any> = combineLatest([\n    this.store.pipe(select(selectUserActive)),\n    this.store.pipe(select(selectCancelUrl))\n  ]);\n\n  public message$: Observable<any> = this.store.pipe(\n    select(selectForgottenPasswordMessage)\n  );\n\n  public status: null | string = null;\n  public errors: null | string = null;\n  public message: null | string = null;\n\n  // Login react form\n  public loginForm: FormGroup;\n  public loginFormSubmitted = false;\n\n  // Request statuses\n  public requestStatus = RequestStatus;\n\n  public usefulMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<IAppState>,\n    private router: Router,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    public spinner: SpinnerOverlayService\n  ) {}\n\n  ngOnInit(): void {\n    this.spinner.hide();\n\n    setTimeout(() => {\n      if (this.spinner.isShowing.value) {\n        this.spinner.hide();\n      }\n    }, 400);\n    // Login form inputs\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n\n    this.subscriptions.push(\n      this.loginData$.subscribe(([user, back_url]) => {\n        if (user) {\n          const dashboardUrl = user.view_status === ViewStatuses.STUDENT ? RouteNames.student : RouteNames.teacher;\n          this.router.navigate(['/', dashboardUrl]);\n        }\n      }),\n      this.status$.subscribe(status => {\n        this.status = status;\n      }),\n      this.errors$.subscribe(errors => {\n        // console.log('LOGIN ERRORS', errors);\n        if (errors === 'No active account found with the given credentials') {\n          errors = 'Sorry, we don\\'t recognise your password';\n        }\n        this.errors = errors;\n      }),\n      this.message$.subscribe(message => {\n        this.message = message;\n        this.errors = null;\n      }),\n      this.loginForm.valueChanges.subscribe(change => {\n        this.errors = null;\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * Handle submit click\n   */\n  handleSubmitClick(): void {\n    this.loginFormSubmitted = true;\n    this.loginForm.markAllAsTouched();\n\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    // Send request to backend\n    this.store.dispatch(\n      new AuthenticationBasicRequestAction({\n        email: this.loginForm.get('email').value,\n        password: this.loginForm.get('password').value\n      })\n    );\n  }\n\n  forgottenPassword() {\n    const dialogRef = this.dialog.open(ForgotDialogFormComponent, {\n      panelClass: 'journeyinto-modal',\n      data: {\n        title: 'Reset password',\n        message: \"To reset your password, please enter the email address you signed up with and we'll send you an email with a reset link.\",\n        buttonText: {\n          ok: 'Reset password'\n        }\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        this.dialog.open(ConfirmDialogComponent, {\n          panelClass: 'journeyinto-modal',\n          data: {\n            title: 'Reset password',\n            message: this.message\n              ? this.message\n              : 'We sent you a message with a unique link to reset your password, please check your email.',\n            buttonText: {\n              cancel: 'Back to login'\n            }\n          }\n        });\n      }\n    });\n  }\n\n  openTakethetourModal() {\n    openTourModal(this.dialog);\n    // this.dialog.open(TakethetourDialogComponent, {\n    //   panelClass: 'takethetour-modal',\n    // });\n  }\n\n  goToSignup() {\n    this.router.navigate(['/', RouteNames.signup], {\n      state: {\n        data: this.loginForm.value\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LoginComponent } from './login.component';\nimport { ForgotDialogFormModule } from './forgot-dialog-form/forgot-dialog-form.module';\nimport { ConfirmDialogModule } from './confirm-dialog/confirm-dialog.module';\nimport { TakethetourDialogModule } from '@src/app/components/modals/takethetour-dialog/takethetour-dialog.module';\nimport { MessageModule } from '@src/app/components/message/message.module';\nimport { ErrorsModule } from '@src/app/components/errors/errors.module';\nimport { JiFormsModule } from '@src/app/components/forms/ji-forms.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ForgotDialogFormModule,\n    ConfirmDialogModule,\n    TakethetourDialogModule,\n    JiFormsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: LoginComponent\n      }\n    ]),\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatRippleModule,\n    FlexLayoutModule,\n    MessageModule,\n    ErrorsModule\n  ],\n  providers: [],\n  bootstrap: [],\n  declarations: [LoginComponent]\n})\nexport class LoginModule {}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IAuthenticationReducerState } from './authentication.types';\nimport { getEntity, getErrors, getStatus } from '../../helpers/adapters';\n\nexport const selectAuthenticationState = createFeatureSelector<IAuthenticationReducerState>('authentication');\nexport const selectAuthenticationStatus = createSelector(\n  selectAuthenticationState,\n  getStatus\n);\nexport const selectAuthenticationEntity = createSelector(\n  selectAuthenticationState,\n  getEntity\n);\nexport const selectAuthenticationErrors = createSelector(\n  selectAuthenticationState,\n  getErrors\n);\n\nexport const selectIsAuthenticated = createSelector(\n  selectAuthenticationEntity,\n  (entity: any) => entity.isAuthenticated\n);\n\nexport const selectUserId = createSelector(selectAuthenticationEntity, (state: any) => state.user_id);"],"sourceRoot":""}